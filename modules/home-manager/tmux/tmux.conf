set -g buffer-limit 20
set -g display-time 1500
set -g remain-on-exit off
set -g repeat-time 300
setw -g allow-rename off
setw -g automatic-rename off
set -g set-titles on
set -g set-titles-string "#I:#W"

unbind "\$" # rename-session
unbind ','    # rename-window
unbind '%'    # split-window -h
unbind '"'  # split-window
unbind '}'    # swap-pane -D
unbind '{'    # swap-pane -U
unbind ']'    # paste-buffer
unbind '['    
unbind "'"  # select-window
unbind n    # next-window
unbind p    # previous-window
unbind l    # last-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind o    # focus thru panes
unbind '&'  # kill-window
unbind "#"  # list-buffer 
unbind '='    # choose-buffer
unbind z    # zoom-pane
unbind M-Up  # resize 5 rows up
unbind M-Down # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left # resize 5 rows left
unbind r # refresh client

bind c new-window -c "#{pane_current_path}"

set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

bind a command-prompt -I "#{window_name}" "rename-window '%%'"
bind A command-prompt -I "#{session_name}" "rename-session '%%'
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

bind C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

bind d detach

bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'

bind m setw monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'

bind M if -F '#{monitor-silence}' \
    'setw monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
    'command-prompt -p "Monitor silence: interval (s)" "setw monitor-silence %%"'

set -g visual-activity on
set -g @copy_use_osc52_fallback on
bind p paste-buffer
bind C-p choose-buffer
bind -n M-Up copy-mode
bind -T copy-mode-vi M-Up              send-keys -X scroll-up
bind -T copy-mode-vi M-Down            send-keys -X scroll-down
bind -T copy-mode-vi M-PageUp          send-keys -X halfpage-up
bind -T copy-mode-vi M-PageDown        send-keys -X halfpage-down
bind -T copy-mode-vi PageDown          send-keys -X page-down
bind -T copy-mode-vi PageUp            send-keys -X page-up
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 2 scroll-down

if -b "command -v reattach-to-user-namespace > /dev/null 2>&1" \
    "run 'tmux set -g default-command \"exec $(tmux show -gv default-shell) 2>/dev/null & reattach-to-user-namespace -l $(tmux show -gv default-shell)\"'"

# switch panes using CMD-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# open a man page in new window
bind / command-prompt "split-window 'exec man %%'"

# quick view of system stats
bind "~" split-window "exec btop"

# listen for activity on all windows
set -g bell-action any

# choose a client to detach
bind D choose-client

# Split window keys
bind _ split-window -h
bind | split-window

# choose window/session
bind "'" choose-window
bind '"' choose-session

# navigate panes using CMD+jk (no prefix)
bind -r M-j select-pane -t :.-
bind -r M-k select-pane -t :.+

# navigate windows using CMD-hl (no prefix)
bind -r M-h select-window -t :-
bind -r M-l select-window -t :+

# swap panes
bind -r J swap-pane -D
bind -r K swap-pane -U

# list all paste buffers
bind b list-buffers

# choose buffer to paste interactively
bind Space choose-buffer

# delete the most recently copied buffer of text
bind x delete-buffer

# new window
bind C new-window

# quit
bind \ confirm-before kill-server

# reload settings
bind R source-file ~/.tmux.conf

# redisplay
bind r refresh-client
